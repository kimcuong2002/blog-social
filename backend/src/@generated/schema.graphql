# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  fullname: String!
  username: String!
  password: String!
  role: Float!
  email: String!
  avatar: String!
  phoneNumber: String!
  desc: String!
  address: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginationUserType {
  data: [UserType!]!
  page: Float!
  limit: Float!
  totalPage: Float!
}

type UserDataResponse {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  fullname: String!
  username: String!
  role: Float!
  email: String!
  avatar: String!
  phoneNumber: String!
  desc: String!
  address: String!
}

type ResponseUser {
  status: String!
  data: UserType!
}

type CategoryType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  link: String!
}

type ResponseMutationType {
  status: String!
  data: CategoryType!
}

type BlogType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  shortDesc: String!
  content: String!
  thumbnail: String!
  creator: UserType!
  like: Float!
}

type ResponseMutationBlogType {
  status: String!
  data: BlogType!
}

type CommentType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: UserType!
  content: String!
  blog: String!
  like: Float!
}

type ResponseMutationCommentType {
  status: String!
  data: CommentType!
}

type LoginResponse {
  access_token: String!
  user: UserType!
}

type ResponseSingleUpload {
  url: String!
}

type Query {
  getUsers(query: OptionsQueryType!): PaginationUserType!
  getUserById(id: String!): UserDataResponse!
  getUserByUserName(username: String!): UserDataResponse!
  getCategories: [CategoryType!]!
  getBlogs: [BlogType!]!
  getBlogById(id: String!): BlogType!
  getComments(idBlog: String!): [CommentType!]!
}

input OptionsQueryType {
  page: Float! = 1
  limit: Float! = 10
  fullname: String! = ""
  role: Float! = 0
  email: String! = ""
  phoneNumber: String! = ""
  address: String! = ""
}

type Mutation {
  createUser(body: CreateUserType!): UserDataResponse!
  updateUser(id: String!, body: UpdateUserType!): ResponseUser!
  updatePassword(id: String!, oldPassword: String!, newPassword: String!): ResponseUser!
  deleteUser(id: String!): ResponseUser!
  createCategory(body: CreateCategoryType!): ResponseMutationType!
  deleteCategory(id: String!): ResponseMutationType!
  createBlog(body: CreateBlogType!): ResponseMutationBlogType!
  updateBlog(id: String!, body: UpdateBlogType!): ResponseMutationBlogType!
  deleteBlog(id: String!): ResponseMutationBlogType!
  createComment(body: CreateCommentType!): ResponseMutationCommentType!
  updateComment(id: String!, body: UpdateCommentType!): ResponseMutationCommentType!
  deleteComment(id: String!): ResponseMutationCommentType!
  login(body: LoginUserInputType!): LoginResponse!
  signup(body: SignUpUserInputType!): UserType!
  uploadSingleFiles(file: Upload!): ResponseSingleUpload!
  uploadMultipleFiles(files: [Upload!]!): [ResponseSingleUpload!]!
}

input CreateUserType {
  fullname: String!
  username: String!
  password: String!
  role: Float! = 2
  email: String!
  dayOfBirth: String!
  avatar: String! = ""
  phoneNumber: String!
  desc: String! = ""
  address: String! = ""
}

input UpdateUserType {
  fullname: String
  username: String
  password: String
  role: Float = 2
  email: String
  dayOfBirth: String
  avatar: String = ""
  phoneNumber: String
  desc: String = ""
  address: String = ""
}

input CreateCategoryType {
  name: String!
  link: String!
}

input CreateBlogType {
  title: String!
  shortDesc: String = ""
  content: String!
  thumbnail: String!
  creator: String!
  like: Float = 0
}

input UpdateBlogType {
  id: ID = "67682e90-f103-4189-9e1c-b3fdfd343d22"
  createdAt: DateTime = "2023-10-10T15:38:45.426Z"
  updatedAt: DateTime = "2023-10-10T15:38:45.426Z"
  title: String
  shortDesc: String = ""
  content: String
  thumbnail: String
  like: Float = 0
}

input CreateCommentType {
  creator: String!
  content: String!
  blog: String!
  like: Float = 0
}

input UpdateCommentType {
  content: String
  like: Float = 0
}

input LoginUserInputType {
  username: String!
  password: String!
}

input SignUpUserInputType {
  fullname: String!
  username: String!
  password: String!
  role: Float! = 2
  email: String!
  dayOfBirth: String!
  avatar: String! = ""
  phoneNumber: String!
  desc: String! = ""
  address: String! = ""
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload